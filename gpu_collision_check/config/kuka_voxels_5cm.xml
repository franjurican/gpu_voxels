<?xml version="1.0" encoding="UTF-8"?>

<!--
  The map name can be either the exact name, or an enumarator like:
  voxelmap_#, voxellist_#, primitive_array_# or octree_#
  where # is a counter, starting at 0.

  For bitvector voxelmaps you can specify the color for "all_types" and then overwrite specific SweptVolume IDs by tpye_#.

  For probabilistic maps, an occupancy_threshold can be set, so that only voxels with an
  occupancy >= occupancy_threshold will be drawn. It has to be in the range of -127 to 127.

  If the color is not specified by a word, the RGBA-values will be used instead.
  The RGBA-values should be between 0 and 1.
  Currently supported colors are: black, white, red, green, blue, gray, yellow, cyan, magenta
  To get a darker version of the color add "dark" infront of the name
  (e.g. dark blue), that doesn't work with black or white.
  Also a color blending along the Z-Axis can be realized by defining "color_1" and "color_2" instead of a single color. -->

  <visualizer_context>
    <background> black </background>

    <!--  The parameter for the voxel list 0 -->
    <voxellist_0>
        <!--her you can specifie an offset to the voxel map (only effects the visualization)-->
        <offset>
            <x> 0 </x>
            <y> 0 </y>
            <z> 0 </z>
        </offset>

        <!-- definde the colors for the different voxel types -->  
        <all_types> dark green </all_types>
    </voxellist_0>
        
    <!-- The parameter for camera -->
    <camera>
      <!-- Free flight mode -->
      <position>
        <x> -27.8445 </x>
        <y> -30.2328 </y>
        <z> 69.4604 </z>
      </position>
      <horizontal_angle> 133.928 </horizontal_angle> <!-- given in Deg -->
      <vertical_angle> -25.6847 </vertical_angle> <!-- given in Deg -->
      <field_of_view> 60 </field_of_view> <!-- given in Deg -->
      <!-- Orbit mode -->
      <focus>
        <x> -15.4649 </x>
        <y> -17.0905 </y>
        <z> -1e-06 </z>
      </focus>
      <window_width> 1024 </window_width>
      <window_height> 768 </window_height>
    </camera>

    
    <!--some miscellaneous parameter--> 
    <miscellaneous>
      <interpolation_repeat> 300 </interpolation_repeat>   <!-- interpolation color repeats after x voxels -->
      <min_view_dim> 60 </min_view_dim>
      <min_xyz_value>   <!--minimal x,y,z value that will be drawn. Input will be treated as unsigned integer-->
        <x> 0 </x>
        <y> 0 </y>
        <z> 0 </z>
      </min_xyz_value>
      <max_xyz_value>    <!--exclusive upper x,y,z boundary. Input will be treated as unsigned integer-->
        <x> -1 </x>
        <y> -1 </y>
        <z> -1 </z>
      </max_xyz_value>
      <max_memory_usage> 0 </max_memory_usage>  <!--In MByte, 0 <=> no limit -->
      <max_fps> 60 </max_fps>  <!--0 <=> no limit -->
      <draw_edges_of_triangles> true </draw_edges_of_triangles>
      <draw_filled_triangles> true </draw_filled_triangles>
      <draw_whole_map> true </draw_whole_map> <!-- disables the view cutting -->
      <draw_octree> true </draw_octree>
      <grid_distance> 10 </grid_distance> <!-- the distance between two grid lines -->
      <grid_height> 0 </grid_height> <!-- the height where the grid will be drawn -->
      <grid_max_x> 50 </grid_max_x> <!-- the x dimension of the grid -->
      <grid_max_y> 50 </grid_max_y> <!-- the y dimension of the grid -->
      <grid_color> blue </grid_color>
      <unit_scale> 5 cm </unit_scale>
    </miscellaneous>
    
</visualizer_context>
